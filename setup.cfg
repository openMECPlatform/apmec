[metadata]
name = apmec
summary = OpenStack MEM Orchestration
description-file =
    README.rst
author = OpenStack
author-email = openstack-dev@lists.openstack.org
home-page = http://docs.openstack.org/developer/apmec/
classifier =
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 3
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3.5

[files]
packages =
    apmec
data_files =
    etc/apmec =
        etc/apmec/api-paste.ini
        etc/apmec/policy.json
        etc/apmec/rootwrap.conf
    etc/rootwrap.d =
        etc/apmec/rootwrap.d/apmec.filters
    etc/init.d = etc/init.d/apmec-server

[global]
setup-hooks =
    pbr.hooks.setup_hook

[entry_points]
console_scripts =
    apmec-db-manage = apmec.db.migration.cli:main
    apmec-server = apmec.cmd.eventlet.apmec_server:main
    apmec-conductor = apmec.cmd.eventlet.conductor:main
    apmec-rootwrap = oslo.rootwrap.cmd:main
apmec.service_plugins =
    dummy = apmec.tests.unit.dummy_plugin:DummyServicePlugin
    mem = apmec.mem.plugin:MEMPlugin
    meo = apmec.meo.meo_plugin:MeoPlugin
    meso = apmec.meso.meso_plugin:MesoPlugin
    commonservices = apmec.plugins.common_services.common_services_plugin:CommonServicesPlugin
apmec.meso.drivers =
    tacker = apmec.meso.drivers.nfv_drivers.tacker_driver:Tacker_Driver
apmec.meo.vim.drivers =
    openstack = apmec.meo.drivers.vim.openstack_driver:OpenStack_Driver
apmec.openstack.common.cache.backends =
    memory = apmec.openstack.common.cache._backends.memory:MemoryBackend
apmec.apmec.mem.drivers =
    noop = apmec.mem.infra_drivers.noop:DeviceNoop
    openstack = apmec.mem.infra_drivers.openstack.openstack:OpenStack
apmec.apmec.mgmt.drivers =
    noop = apmec.mem.mgmt_drivers.noop:DeviceMgmtNoop
    openwrt = apmec.mem.mgmt_drivers.openwrt.openwrt:DeviceMgmtOpenWRT
apmec.apmec.monitor.drivers =
    ping = apmec.mem.monitor_drivers.ping.ping:MEAMonitorPing
    http_ping = apmec.mem.monitor_drivers.http_ping.http_ping:MEAMonitorHTTPPing
apmec.apmec.alarm_monitor.drivers =
    ceilometer = apmec.mem.monitor_drivers.ceilometer.ceilometer:MEAMonitorCeilometer
apmec.apmec.policy.actions =
    autoscaling = apmec.mem.policy_actions.autoscaling.autoscaling:MEAActionAutoscaling
    respawn = apmec.mem.policy_actions.respawn.respawn:MEAActionRespawn
    log = apmec.mem.policy_actions.log.log:MEAActionLog
    log_and_kill = apmec.mem.policy_actions.log.log:MEAActionLogAndKill
oslo.config.opts =
    apmec.common.config = apmec.common.config:config_opts
    apmec.wsgi = apmec.wsgi:config_opts
    apmec.service = apmec.service:config_opts
    apmec.meo.meo_plugin = apmec.meo.meo_plugin:config_opts
    apmec.meo.drivers.vim.openstack_driver = apmec.meo.drivers.vim.openstack_driver:config_opts
    apmec.meso.meso_plugin = apmec.meso.meso_plugin:config_opts
    apmec.mseo.drivers.nfv_drivers.tacker_driver = apmec.meso.drivers.nfv_drivers.tacker_driver:config_opts
    apmec.keymgr = apmec.keymgr:config_opts
    apmec.mem.monitor = apmec.mem.monitor:config_opts
    apmec.mem.plugin = apmec.mem.plugin:config_opts
    apmec.mem.infra_drivers.openstack.openstack= apmec.mem.infra_drivers.openstack.openstack:config_opts
    apmec.mem.mgmt_drivers.openwrt.openwrt = apmec.mem.mgmt_drivers.openwrt.openwrt:config_opts
    apmec.mem.monitor_drivers.http_ping.http_ping = apmec.mem.monitor_drivers.http_ping.http_ping:config_opts
    apmec.mem.monitor_drivers.ping.ping = apmec.mem.monitor_drivers.ping.ping:config_opts
    apmec.mem.monitor_drivers.ceilometer.ceilometer = apmec.mem.monitor_drivers.ceilometer.ceilometer:config_opts
    apmec.alarm_receiver = apmec.alarm_receiver:config_opts
mistral.actions =
    apmec.vim_ping_action = apmec.meo.workflows.vim_monitor.vim_ping_action:PingVimAction


[build_sphinx]
all_files = 1
build-dir = doc/build
source-dir = doc/source

[build_releasenotes]
all_files = 1
build-dir = releasenotes/build
source-dir = releasenotes/source

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = apmec/locale/apmec.pot

[compile_catalog]
directory = apmec/locale
domain = apmec

[update_catalog]
domain = apmec
output_dir = apmec/locale
input_file = apmec/locale/apmec.pot

[wheel]
universal = 1

[pbr]
autodoc_index_modules = True
warnerrors = True
autodoc_exclude_modules =
     apmec.db.migration.alembic_migrations.*
     apmec.tests.*
     thirdparty.*
